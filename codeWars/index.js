class Ball {
    constructor(ballType) {
        if (ballType) {
            this.ballType = ballType
        } else {
            this.ballType = 'regular'
        }
    }
}


// 1  //В этом простом упражнении вы создадите программу, которая будет принимать два списка целых чисел a и b. Каждый список будет состоять из 3 положительных целых чисел выше 0, представляющих размеры кубоидов a и b. Вы должны найти разницу объемов кубоидов независимо от того, какой из них больше.
//
// Например, если переданы параметры ([2, 2, 3], [5, 4, 1]), объем a равен 12, а объем b равен 20. Следовательно, функция должна вернуть 8.
//
// Ваша функция будет проверена как на готовых, так и на случайных примерах.
//
// Если можете, попробуйте написать это одной строкой кода.


let start = [1, 7, 6] //14
let end = [2, 3, 4]  // 9

const func = (start, end) => {

    return Math.abs(start.reduce((acc, el) => acc * el) - end.reduce((acc, el) => acc * el))
}

// console.log(func(start, end))


//    2     //
// Ваша функция принимает два аргумента:
//
//     текущий возраст отца (лет)
// текущий возраст сына (лет)
// Подсчитайте, сколько лет назад отец был вдвое старше сына (или через сколько лет он будет вдвое старше).

const fatheAge = 40
const sunAge = 23

const funcAge = (fatheAge, sunAge) => {
    let years = sunAge * 2
    return fatheAge > years
        ? fatheAge - years : Math.abs(years - fatheAge)
}

// console.log(funcAge(40, 23))

//      3      ///

// Вам даны два отсортированных массива, которые содержат только целые числа. Ваша задача найти способ объединить их в один, отсортированный по возрастанию. Завершите функцию mergeArrays (arr1, arr2), где arr1 и arr2 - исходные отсортированные массивы.
//
// Вам не нужно беспокоиться о проверке, поскольку arr1 и arr2 должны быть массивами с 0 или более целыми числами. Если и arr1, и arr2 пусты, просто верните пустой массив.
//
// Примечание: arr1 и arr2 могут быть отсортированы в разном порядке. Также arr1 и arr2 могут иметь одинаковые целые числа. Удалите дубликаты в возвращенном результате.


function mergeArrays(arr1, arr2) {

    const arr = arr1.concat(arr2).sort((a, b) => a - b)
    return [...new Set(arr)]

}

//  4  ///  устранить все ошибки из предоставленного кода, чтобы код работал и выводил ожидаемое значение. Выведите длину самого длинного слова в виде числа.
//
// Будет только одно «самое длинное» слово.

let str = "The quick white fox jumped around the massive dog"

// console.log(str.split(' '));
let spl = str.split(' ')
let longest = 0

const funk1 = () => {
    for (let el of spl) {
        if (el.length > longest) {
            longest = el.length
        }
    }
    return longest
}
// console.log(funk1(arr))


/// 5  //// напишите мне функцию stringy, которая принимает размер и возвращает строку чередующихся «1» и «0».
//
// строка должна начинаться с 1.
//
// строка размером 6 должна вернуть: «101010».
//
// размер 4 должен вернуть: «1010».
//
// размер 12 должен вернуть: «101010101010».
//
// Размер всегда будет положительным и будет использовать только целые числа.


const stringy = (size) => {
    let string = '1'
    for (let i = 0; i < size - 1; i++)
        if (i % 2 === 0) {
            string += '0'
        } else {
            string += '1'
        }
    return string
}

// console.log(stringy(12));


//////     6      ///////   Реализуйте функцию, которая преобразует данное логическое значение в его строковое представление.
//
// Примечание. Будут предоставлены только действительные входные данные.

function booleanToString(b) {
    return b ? 'True' : 'False'
}

// console.log(booleanToString(false));


// Задача
// Учитывая список чисел, верните список так, чтобы значения увеличивались на 1 для каждого индекса до максимального значения.


const arr = [1, 5, 6, 11]

function pipeFix(numbers) {                     //   НЕ ЗАКОНЧЕНАААААААААА
    let res = []
    let min = numbers[0]
    let max = numbers[numbers.length - 1]
    for (let el of numbers) {
        if (min < max) {
            res.push(el)
        }
    }
    // console.log(res)
}

pipeFix(arr)


//Цель этого ката - выяснить, сколько бутылок виски беспошлинной торговли вам нужно будет купить, чтобы экономия по сравнению с обычной средней ценой эффективно покрыла расходы на ваш отпуск.
//
// Вам будет предоставлена ​​стандартная цена (normPrice), скидка в дьюти-фри (скидка) и стоимость праздника.
//
// Например, если бутылка обычно стоит 10 фунтов стерлингов, а скидка в дьюти фри составляет 10%, вы сэкономите 1 фунт стерлингов на каждой бутылке. Если ваш отпуск стоит 500 фунтов стерлингов, ответ, который вы должны вернуть, будет 500.
//
// Все входные данные будут целыми. Пожалуйста, верните целое число. Округлить.


function dutyFree(normPrice, discount, hol) {
    return Math.floor(hol / (normPrice * (discount / 100)))
}

dutyFree(12, 50, 1000)

































